<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserRoleXML">
	<resultMap id="UserRoleMap" type="userRole">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="user_no" property="userNo" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="creator" property="creator" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="updator" property="updator" jdbcType="VARCHAR" />
		<result column="del_flag" property="delFlag" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">
		id,
		user_id,
		user_no,
		role_id,
		create_time,
		creator,
		update_time,
		updator,
		del_flag
	</sql>

	<sql id="where">
		<if test="id!=null and id!=''">
			and id = #{id,jdbcType=VARCHAR}
		</if>
		<if test="userId!=null and userId!=''">
			and user_id = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="userNo!=null and userNo!=''">
			and user_no = #{userNo,jdbcType=VARCHAR}
		</if>
		<if test="roleId!=null and roleId!=''">
			and role_id = #{roleId,jdbcType=VARCHAR}
		</if>
		<if test="createTime!=null and createTime!=''">
			and create_time = #{createTime,jdbcType=TIMESTAMP}
		</if>
		<if test="creator!=null and creator!=''">
			and creator = #{creator,jdbcType=VARCHAR}
		</if>
		<if test="updateTime!=null and updateTime!=''">
			and update_time = #{updateTime,jdbcType=TIMESTAMP}
		</if>
		<if test="updator!=null and updator!=''">
			and updator = #{updator,jdbcType=VARCHAR}
		</if>
		<if test="delFlag!=null">
			and del_flag = #{delFlag,jdbcType=INTEGER}
		</if>
	</sql>

	<select id="getUserRoleById" resultMap="UserRoleMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tbl_privilege_user_role
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	
	<select id="getAllUserRoleVo" resultType="com.ecnice.privilege.vo.privilege.UserRoleVo">
		SELECT DISTINCT t2.username,t3.sn FROM tbl_privilege_user_role t1
		INNER JOIN tbl_privilege_user t2 ON t1.user_id=t2.id
		INNER JOIN tbl_privilege_role t3 ON t1.role_id=t3.id
	</select>

	<select id="getAll" parameterType="userRole" resultMap="UserRoleMap">
		select * from tbl_privilege_user_role where 1=1
		<include refid="where" />
	</select>
	
	<select id="getUsersByRoleId" parameterType="java.lang.String" resultMap="UserXML.UserMap">
		SELECT t3.* FROM tbl_privilege_user_role t1 
		INNER JOIN tbl_privilege_role t2 ON t1.role_id=t2.id
		INNER JOIN tbl_privilege_user t3 ON t1.user_id=t3.id
		WHERE t2.id=#{value,jdbcType=VARCHAR} and t3.del_flag=1
	</select>

	<select id="getRolesByUserId" resultMap="RoleXML.RoleMap" parameterType="java.lang.String">
		SELECT
		  t2.id,
		  CONCAT(cpn.code, '-', cpn.cname, '-', sys.name, '-', t2.name)    NAME,
		  CONCAT(cpn.code, '-', cpn.cname, '-', sys.name, '-', t2.name)    long_name,
		  t2.sn,
		  t2.note,
		  t2.create_time,
		  t2.creator,
		  t2.update_time,
		  t2.updator,
		  t2.del_flag
		FROM tbl_privilege_user_role t1
		  INNER JOIN tbl_privilege_role t2
		    ON t1.role_id = t2.id
		  LEFT JOIN tbl_privilege_icsystem sys
		    ON sys.id = t2.system_id
		  LEFT JOIN tbl_privilege_company cpn
		    ON cpn.id = t2.company_id
		WHERE t2.valid_state=1 AND t1.user_id =#{userId,jdbcType=VARCHAR}
	</select>

	<insert id="insertUserRole" parameterType="userRole">
		insert into tbl_privilege_user_role (
		<include refid="Base_Column_List" />
		)
		values (
		#{id,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR},
		#{userNo,jdbcType=VARCHAR},
		#{roleId,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{creator,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP},
		#{updator,jdbcType=VARCHAR},
		#{delFlag,jdbcType=INTEGER}
		)
	</insert>

	<delete id="delUserRole" parameterType="java.lang.String">
		delete from tbl_privilege_user_role
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteUserRoleByUserRoleId" parameterType="java.util.Map">
		delete from tbl_privilege_user_role
		where user_no = #{userNo,jdbcType=VARCHAR} and role_id = #{roleId,jdbcType=VARCHAR} 
	</delete>
	
	<delete id="delUserRoleByUserId" parameterType="java.lang.String">
		delete from tbl_privilege_user_role
		where user_id = #{value,jdbcType=VARCHAR}
	</delete>
	<delete id="delUserRoleByRoleId" parameterType="java.lang.String">
		delete from tbl_privilege_user_role
		where role_id = #{value,jdbcType=VARCHAR}
	</delete>

	<!-- 同步用户角色数据 -->
    <update id="synUserRoleList" parameterType="java.util.List">  
        insert into tbl_privilege_user_role (
			<include refid="Base_Column_List" />
		) values
		<foreach collection="list" item="item" index="index" separator=",">
			(
			#{item.id,jdbcType=VARCHAR},
			#{item.userId,jdbcType=VARCHAR},
			#{item.userNo,jdbcType=VARCHAR},
			#{item.roleId,jdbcType=VARCHAR},
			#{item.createTime,jdbcType=TIMESTAMP},
			#{item.creator,jdbcType=VARCHAR},
			#{item.updateTime,jdbcType=TIMESTAMP},
			#{item.updator,jdbcType=VARCHAR},
			#{item.delFlag,jdbcType=INTEGER}
			)
		</foreach>
	     ON DUPLICATE KEY UPDATE
			user_id=VALUES(user_id),
			user_no=VALUES(user_no),
			role_id=VALUES(role_id),
			update_time=VALUES(update_time),
			updator=VALUES(updator),
			del_flag=VALUES(del_flag)
	</update>

</mapper>